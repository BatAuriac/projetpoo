	02/03/2016
Avancement:
-Mise en place et comprehension partielle du code fournis. 
-Choix de copier le comportement de PvZ car équilibré et fonctionnel(Food de base: 50 Pts et cout de base de la fourmie moissonneuse et lanceuse : 50 Pts).
-Choix du terrain PvZ existant: 5 tunnels de 9 cases de long mais il y a une limitation de taille donc restriction à 8 cases.
-Mise en place de la fourmie moissonneuse (cout 50 Pts, fournis 50 Pts avec un temps de recharge aléatoire entre 1 et 3 tours).
-Passage en 60 fps pour plus de fluidité.

Sites consultés:
http://stackoverflow.com/questions/5887709/getting-random-numbers-in-java


	03/03/2016
Avancement:
-Mise en place de la fourmie lanceuse.
-Mise en place de la fourmie mur.
-Mise en place de la fourmie affamée.
-Mise à niveau de la fenêtre en 1280x720 pour obtenir la 9eme case d'affichable et mise à niveau de la limitation à 9.


	14/03/2016 et 15/03/2016
Avancement:
-tentative de mise en place de la fourmie de feu. Ne fonctionne pas car elle meurt avant de tuer malgré la redéfinition de reduceArmor() qui appelle leavePlace() qu'à la fin. Cela aurait dû permettre de lui faire faire son action spéciale avant sa mort... 
-Arrivée sur un nullPointerException après modification de reduceArmor(). Jusque là, il y avait son dédoublage avec l'argument colony en plus pour la fourmie de feu.

	16/03/2016
Avancement:
-Fin de l'implémentation de la fourmie de feu. 
-Résolution du bug avec plusieurs abeilles sur la même case venant du fait que la fourmie tue au début des actions des abeilles, mettant leurs places en null avant l'action des abeilles et produisant le bug. Résolution par une condition avant les actions des abeilles.

	17/03/2016
Avancement:
-Recul du point de spawn des abeilles pour eviter qu'elles passent à travers l'image des tunnels.
-Création de classe Water et de ses constructeurs.
-Mise en place de la colorisation en bleu si la case est un instance de water dans la fonction drawColony de la classe AntGame.
-Utilisation de moatFrequency pour définir les cases Water.
-Fourmie Ninja implémentée avec tous les changements nécessaires sur les autres classes. 
-Le type Water est implémenté et fonctionnel.

	18/03/2016
Avancement:
-Mise en place de la scubaAnt fonctionnelle lançant des feuilles bleus.
-Création de l'interface containing et modification de addInsect() dans Place.java.
-Mise en place du constructeur de bodyguard. 

	19/03/2016
Avancement:
-Corrections des multiples bugs liés à la bodyguard dans la récupération du type de fourmie contenue. En effet il faut utiliser la syntaxe ((Containing) ant).getAnt() pour farie appel à la fourmie dans la Containing.
-Modifications adéquate de antgame et de place pour la bodyguard. gestion de l'ordre dans lequel on mettait les Containing et Ant. Celle nous a permi de mieux comprendre les interface par rapport aux superclass.
-Le type BodyGuard est implémenté est fonctionne.
-Création de la queenAnt mais elle reste non fonctionnelle.

	20/03/2016
Avancement:
-Les fourmies bonus ont toutes été implémentées et sont fonctionnelles. Il faut penser à ne pas utiliser de constructeurs avec arguments lorqu'on créer une fourmie, car lors de la création du banc de séléction, cela entraine une erreur NullPointerException.

